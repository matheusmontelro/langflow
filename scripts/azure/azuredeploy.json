{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "containerGroupName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "postgresServerName": {
      "type": "string"
    },
    "postgresAdmin": {
      "type": "string"
    },
    "postgresPassword": {
      "type": "secureString"
    },
    "containerAppEnvironmentName": {
      "type": "string"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string"
    },
    "containerRegistryName": {
      "type": "string"
    }
  },
  "variables": {
    "uniqueStringSuffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
    "storageAccountName": "[concat(parameters('storageAccountName'), variables('uniqueStringSuffix'))]",
    "containerRegistryName": "[concat(parameters('containerRegistryName'), variables('uniqueStringSuffix'))]",
    "postgresServerName": "[concat(parameters('postgresServerName'), variables('uniqueStringSuffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2023-12-01-preview",
      "name": "[variables('postgresServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable",
        "capacity": 1
      },
      "properties": {
        "version": "16",
        "administratorLogin": "[parameters('postgresAdmin')]",
        "administratorLoginPassword": "[parameters('postgresPassword')]",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "network": {
          "publicNetworkAccess": "Enabled"
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2023-12-01-preview",
      "name": "[format('{0}/{1}', variables('postgresServerName'), 'langflow')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresServerName'))]"
      ],
      "properties": {
        "charset": "UTF8",
        "collation": "en_US.utf8"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2023-12-01-preview",
      "name": "[format('{0}/AllowAllAzureIPs', variables('postgresServerName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresServerName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-08-01-preview",
      "name": "[parameters('containerAppEnvironmentName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))).customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
          }
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-05-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments/storages",
      "apiVersion": "2023-08-01-preview",
      "name": "[format('{0}/langflow-storage', parameters('containerAppEnvironmentName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "azureFile": {
          "accessMode": "ReadWrite",
          "accountName": "[variables('storageAccountName')]",
          "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]",
          "shareName": "appconfig"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('storageAccountName'), '/default/appconfig')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized"
      }
    },
{
  "type": "Microsoft.App/containerapps",
  "apiVersion": "2023-08-01-preview",
  "name": "[parameters('containerGroupName')]",
  "location": "[parameters('location')]",
  "dependsOn": [
    "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
    "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('postgresServerName'))]",
    "[resourceId('Microsoft.App/managedEnvironments/storages', parameters('containerAppEnvironmentName'), 'langflow-storage')]"
  ],
  "properties": {
    "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
    "configuration": {
      "ingress": {
        "external": true,
        "targetPort": 7860
      }
    },
    "template": {
      "containers": [
        {
          "name": "langflow",
          "image": "langflowai/langflow:latest",
          "resources": {
            "cpu": 1,
            "memory": "2.0Gi"
          },
          "env": [
            {
              "name": "LANGFLOW_DATABASE_URL",
              "value": "[format('postgresql://{0}:{1}@{2}.postgres.database.azure.com:5432/langflow?sslmode=require', parameters('postgresAdmin'), parameters('postgresPassword'), variables('postgresServerName'))]"
            },
            {
              "name": "LANGFLOW_CONFIG_DIR",
              "value": "/mnt/data"
            },
            {
              "name": "LANGFLOW_AUTO_LOGIN",
              "value": "true"
            },
            {
              "name": "LANGFLOW_SUPERUSER",
              "value": "admin"
            },
            {
              "name": "LANGFLOW_SUPERUSER_PASSWORD",
              "value": "04W8oQTd"
            }
          ],
          "volumeMounts": [
            {
              "volumeName": "appconfigvol",
              "mountPath": "/mnt/data"
            }
          ]
        }
      ],
      "volumes": [
        {
          "name": "appconfigvol",
          "storageType": "AzureFile",
          "storageName": "langflow-storage"
        }
      ]
    }
  }
}
  ]
}